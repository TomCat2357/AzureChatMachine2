version: '3.2'

services:
  apache:
    container_name: 'apache'
    build: 
      context: ./apache/.
      dockerfile: apache.dockerfile # ネットワーク利用時
      # build時に使う
      args:
        DOMAIN_NAME: ${DOMAIN_NAME} 
    ports : 
      - "443:443"
      - "80:80"
    volumes:
      - ./data/apache_log:/var/log/apache2 # apache2のlog保存用
      - /etc/letsencrypt:/etc/letsencrypt # letsencryptの証明書保存用
    # コンテナ実行時に使用
    environment:
      - 'TZ=Asia/Tokyo'
      - EMAIL=${EMAIL}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - TENANT_ID=${TENANT_ID}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - PASSPHRASE=${PASSPHRASE}
    restart: always

  streamlit:
    container_name: 'streamlit'
    build: 
      context: ./streamlit/.
      dockerfile: streamlit.dockerfile
    env_file:
      - .env
    # コンテナ実行時に使用
    environment:
      - 'TZ=Asia/Tokyo'
    ports:
      - "8501:8501"
      - "8502:8502"
    expose:
      - "8501"
    #command: sh -c "streamlit run chat_openai0_28.py"
    volumes:
      - ./data/streamlit_log:/root/log/  # log保存用
      - ./streamlit:/root/docker/ # chat_openai0_28.pyアクセス用
    restart: always
    #working_dir: '/root/docker/'

  redis:
    container_name: 'redis'
    image: redis:latest
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis_snapshot/:/data/ # snapshot保存用
      - ./redis/:/usr/local/etc/redis/ # redis設定用
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    restart: always
  
  flask:
    container_name: 'flask'
    build: 
      context: ./flask/.
      dockerfile: flask.dockerfile
    volumes:
      - ./flask/:/app
    environment:
      - 'TZ=Asia/Tokyo'
      - DOMAIN_NAME=${DOMAIN_NAME}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ENCRYPT_KEY=${ENCRYPT_KEY}
    # コンテナ実行時に使用
    ports:
      - "5000:5000"
    expose:
      - "5000"
    restart: always
    #working_dir: '/root/app/'
    #command: ["python", "app.py"]
    
